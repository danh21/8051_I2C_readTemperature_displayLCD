C51 COMPILER V9.01   MAIN                                                                  07/04/2023 20:57:33 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE main.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include <reg51.h>
   2          #include <absacc.h>             // defines XBYTE
   3          #include "intrins.h"    // defines nop
   4          
   5          
   6          
   7          #define REG0 XBYTE[0x8000]      // external data memory at address 8000h   
   8          #define REG1 XBYTE[0x8001]   
   9          #define REG2 XBYTE[0x8002]   
  10          
  11          #define uchar unsigned char    
  12          
  13          uchar result[16] = {" T = "};  
  14           
  15          uchar bdata busyFlag;                   // bit-addressable
  16          sbit busyFlag_7 = busyFlag^7;   // bit 7 of busy flag
  17          
  18          sbit SCL = P3^3;                                // serial clock    
  19          sbit SDA = P3^4;                        // serial data
  20          
  21          
  22          
  23          ///////////////////////////////////// START of I2C ////////////////////////////////////////////
  24          void Start(void)        // high-to-low transition of SDA while SCL is high       
  25          {
  26   1              SCL = 1;
  27   1              SDA = 1;
  28   1          _nop_();            // pause for 1 CPU cycle
  29   1          SDA = 0;
  30   1          _nop_();
  31   1      }  
  32          
  33          
  34          
  35          void Stop(void)         // low-to-high transition of SDA while SCL is high
  36          {
  37   1          SCL = 1;
  38   1              SDA = 0;
  39   1          _nop_();
  40   1          SDA = 1;
  41   1          _nop_();
  42   1      }
  43          
  44          
  45          
  46          void ACK(void)          // SDA is 0  
  47          {
  48   1          SDA = 0;
  49   1          _nop_();
  50   1          SCL = 1;
  51   1          _nop_();
  52   1          SCL = 0;
  53   1      }
  54          
  55          
C51 COMPILER V9.01   MAIN                                                                  07/04/2023 20:57:33 PAGE 2   

  56          
  57          void NACK(void)      
  58          {
  59   1          SDA = 1;            // SDA is 1
  60   1          _nop_ ();
  61   1          SCL = 1;
  62   1          _nop_ ();
  63   1          SCL = 0;
  64   1      } 
  65          
  66          
  67          
  68          void Send(uchar Data)            
  69          {
  70   1              uchar i;
  71   1                      
  72   1              for (i = 0; i < 8; i++) {               // 8 bit
  73   2                      SCL = 0;
  74   2                      _nop_();
  75   2      
  76   2                      if ((Data & 0x80) == 0x80)      // MSB first
  77   2                          SDA = 1;
  78   2                      else
  79   2                          SDA = 0;
  80   2      
  81   2                      Data <<= 1; 
  82   2      
  83   2                      SCL = 1;
  84   2                      _nop_();      
  85   2              } 
  86   1                   
  87   1          SCL = 0;
  88   1      }
  89          
  90          
  91          
  92          uchar Read(void) 
  93          {
  94   1              uchar Data = 0, i;
  95   1      
  96   1          SDA = 1;
  97   1          for (i = 0; i < 8; i++) {           // 8 bit
  98   2              SCL = 0;
  99   2              _nop_();
 100   2                      SCL = 1;
 101   2                      _nop_();
 102   2      
 103   2              if (SDA)      
 104   2                              Data |= 0x01;
 105   2                                              
 106   2                      if (i < 7)
 107   2                              Data <<= 1;                             // MSB first
 108   2          }
 109   1      
 110   1          return Data;
 111   1      }
 112          ///////////////////////////////////// END of I2C ////////////////////////////////////////////
 113          
 114          
 115          
 116          /////////////////////////////////// Start of DS1621 ///////////////////////////////////////
 117          void initSensor()
C51 COMPILER V9.01   MAIN                                                                  07/04/2023 20:57:33 PAGE 3   

 118          {
 119   1          Start();
 120   1          Send(0x98);         // 1001 - for read and write operations ; 100 - address (proteus) ; 0 - write
 121   1          ACK();
 122   1          Send(0xEE);         // begins a temperature conversion
 123   1          NACK();
 124   1          Stop();
 125   1      }
 126          
 127          
 128          
 129          void readTemp() 
 130          {      
 131   1          uchar Data;
 132   1      
 133   1          Start(); 
 134   1          Send(0x98);
 135   1          ACK();
 136   1          Send(0xAA);         // reads the last temperature conversion result
 137   1          NACK();
 138   1              Stop();
 139   1      
 140   1          Start();
 141   1          Send(0x99);         // 1001 - for read and write operations ; 100 - address (proteus) ; 1 - write
 142   1          ACK();
 143   1          Data = Read();
 144   1          NACK();
 145   1          Stop();
 146   1      
 147   1          if((Data&0x80) != 0 && Data != 128) {       // negative value -> MSB = 1
 148   2              result[5] = '-';
 149   2              Data = ~(--Data);                                       // ex: 231 ---> -25
 150   2          }
 151   1          else                                                                        // positive value -> MSB = 0    
 152   1              result[5] = '+';
 153   1      
 154   1              result[6] = Data/100 + '0';                             // hundreds ; '0' --> convert num to char
 155   1          result[7] = Data / 10 % 10 + '0';           // dozens
 156   1          result[8] = Data % 10 + '0';                // units
 157   1              result[9] = 223;                                                // degree
 158   1              result[10] = 'C';
 159   1      }
 160          /////////////////////////////////// END of DS1621 ///////////////////////////////////
 161          
 162          
 163          
 164          /////////////////////////////////// START of LCD ///////////////////////////////////
 165          void busy()                             // check status of LCD
 166          {
 167   1              // busyFlag_7 = 1 ---> the system is now internally executing a previously received instruction
 168   1          // to read busy flag ---> RS = 0, R/W = 1
 169   1              // REG1 has address 01H
 170   1              do {
 171   2              busyFlag = REG1;
 172   2          } while (busyFlag_7);       
 173   1      }
 174          
 175          
 176          
 177          void writeCMD(uchar cmd)   
 178          {
 179   1              // to send CMD ---> RS = 0, R/W = 0
C51 COMPILER V9.01   MAIN                                                                  07/04/2023 20:57:33 PAGE 4   

 180   1              // REG0 has address 00H
 181   1          busy();
 182   1          REG0 = cmd;
 183   1      }
 184          
 185          
 186          
 187          void initLCD()          
 188          {
 189   1          writeCMD(0x38);             // data length 8bits ; 2 lines ; (5×8 pixel) matrix
 190   1          writeCMD(0x01);             // clear screen
 191   1          writeCMD(0x06);             // increment cursor (shift cursor to right)
 192   1          writeCMD(0x0C);             // display on, cursor off
 193   1      }
 194          
 195          
 196          
 197          void writeChar(uchar ch)    //write data
 198          {
 199   1              // to send data ---> RS = 1, R/W = 0
 200   1              // REG2 has address 10H
 201   1          busy();
 202   1          REG2 = ch;
 203   1      }
 204          
 205          
 206          
 207          void writeStr(uchar str[]) 
 208          {
 209   1          uchar i;
 210   1          for(i=0; i<16; i++)
 211   1              writeChar(str[i]);
 212   1      }
 213          /////////////////////////////////// END of LCD ///////////////////////////////////
 214           
 215          
 216          
 217          void main()
 218          {
 219   1          initLCD();
 220   1              initSensor();
 221   1                  
 222   1          while(1) {       
 223   2              readTemp();
 224   2              writeCMD(0x80);         // Force cursor to beginning of first line
 225   2              writeStr(result);  
 226   2          }
 227   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    319    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     17       3
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)

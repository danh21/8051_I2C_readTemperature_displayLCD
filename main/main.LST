C51 COMPILER V9.01   MAIN                                                                  07/04/2023 16:24:06 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE main.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include <reg51.h>
   2          #include "intrins.h"    // defines nop
   3          
   4          
   5            
   6          #define uchar unsigned char    
   7          
   8          uchar result[16] = {" T = "};  
   9          
  10          sbit SCL = P3^3;                // serial clock    
  11          sbit SDA = P3^4;                // serial data
  12          
  13          #define LCD P2
  14          sbit RS = P1^2;                 // register select
  15          sbit E  = P1^3;                 // enable
  16          
  17          
  18          
  19          ///////////////////////////////////// START of I2C ////////////////////////////////////////////
  20          void Start(void)        // high-to-low transition of SDA while SCL is high       
  21          {
  22   1              SCL = 1;
  23   1              SDA = 1;
  24   1          _nop_();            // pause for 1 CPU cycle
  25   1          SDA = 0;
  26   1          _nop_();
  27   1      }  
  28          
  29          
  30          
  31          void Stop(void)         // low-to-high transition of SDA while SCL is high
  32          {
  33   1          SCL = 1;
  34   1              SDA = 0;
  35   1          _nop_();
  36   1          SDA = 1;
  37   1          _nop_();
  38   1      }
  39          
  40          
  41          
  42          void ACK(void)          // SDA is 0  
  43          {
  44   1          SDA = 0;
  45   1          _nop_();
  46   1          SCL = 1;
  47   1          _nop_();
  48   1          SCL = 0;
  49   1      }
  50          
  51          
  52          
  53          void NACK(void)      
  54          {
  55   1          SDA = 1;            // SDA is 1
C51 COMPILER V9.01   MAIN                                                                  07/04/2023 16:24:06 PAGE 2   

  56   1          _nop_ ();
  57   1          SCL = 1;
  58   1          _nop_ ();
  59   1          SCL = 0;
  60   1      } 
  61          
  62          
  63          
  64          void Send(uchar Data)            
  65          {
  66   1              uchar i;
  67   1                      
  68   1              for (i = 0; i < 8; i++) {               // 8 bit
  69   2                      SCL = 0;
  70   2                      _nop_();
  71   2      
  72   2                      if ((Data & 0x80) == 0x80)      // MSB first
  73   2                          SDA = 1;
  74   2                      else
  75   2                          SDA = 0;
  76   2      
  77   2                      Data <<= 1; 
  78   2      
  79   2                      SCL = 1;
  80   2                      _nop_();      
  81   2              } 
  82   1                   
  83   1          SCL = 0;
  84   1      }
  85          
  86          
  87          
  88          uchar Read(void) 
  89          {
  90   1              uchar Data = 0, i;
  91   1          SDA = 1;
  92   1      
  93   1          for (i = 0; i < 8; i++) {           // 8 bit
  94   2              SCL = 0;
  95   2              _nop_();
  96   2                      SCL = 1;
  97   2                      _nop_();
  98   2      
  99   2              if (SDA)      
 100   2                              Data |= 0x01;
 101   2                                              
 102   2                      if (i < 7)
 103   2                              Data <<= 1;                             // MSB first
 104   2          }
 105   1      
 106   1          return Data;
 107   1      }
 108          ///////////////////////////////////// END of I2C ////////////////////////////////////////////
 109          
 110          
 111          
 112          /////////////////////////////////// Start of DS1621 ///////////////////////////////////////
 113          void initSensor()
 114          {
 115   1          Start();
 116   1          Send(0x90);         // 1001 - for read and write operations ; 000 - address (proteus) ; 0 - write
 117   1          ACK();
C51 COMPILER V9.01   MAIN                                                                  07/04/2023 16:24:06 PAGE 3   

 118   1          Send(0xEE);         // begins a temperature conversion
 119   1          NACK();
 120   1          Stop();
 121   1      }
 122          
 123          
 124          
 125          void readTemp() 
 126          {      
 127   1          uchar Data;
 128   1      
 129   1          Start(); 
 130   1          Send(0x90);
 131   1          ACK();
 132   1          Send(0xAA);         // reads the last temperature conversion result
 133   1          NACK();
 134   1              Stop();
 135   1      
 136   1          Start();
 137   1          Send(0x91);         // 1001 - for read and write operations ; 000 - address (proteus) ; 1 - write
 138   1          ACK();
 139   1          Data = Read();
 140   1          NACK();
 141   1          Stop();
 142   1      
 143   1          if((Data&0x80) != 0 && Data != 128) {       // negative value -> MSB = 1
 144   2              result[5] = '-';
 145   2              Data = ~(--Data);                                       // ex: 231 ---> -25
 146   2          }
 147   1          else                                                                        // positive value -> MSB = 0    
 148   1              result[5] = '+';
 149   1      
 150   1              result[6] = Data/100 + '0';                             // hundreds ; '0' --> convert num to char
 151   1          result[7] = Data / 10 % 10 + '0';           // dozens
 152   1          result[8] = Data % 10 + '0';                // units
 153   1              result[9] = 223;                                                // degree
 154   1              result[10] = 'C';
 155   1      }
 156          /////////////////////////////////// END of DS1621 ///////////////////////////////////
 157          
 158          
 159          
 160          /////////////////////////////////// START of LCD ///////////////////////////////////
 161          void msdelay(unsigned int time) 
 162          {                                                                                  
 163   1          unsigned int i, j;
 164   1          for (i = 0; i < time; i++)    
 165   1              for (j = 0; j < 1275; j++);
 166   1      } 
 167          
 168          
 169          
 170          void writeCMD(uchar cmd)   
 171          {
 172   1          RS = 0;
 173   1              LCD = cmd;
 174   1              E = 1;
 175   1              E = 0;
 176   1              msdelay(1);
 177   1      }
 178          
 179          
C51 COMPILER V9.01   MAIN                                                                  07/04/2023 16:24:06 PAGE 4   

 180          
 181          void initLCD()          
 182          {
 183   1          writeCMD(0x38);             // data length 8bits ; 2 lines ; (5×8 pixel) matrix
 184   1          writeCMD(0x01);             // clear screen
 185   1          writeCMD(0x06);             // increment cursor (shift cursor to right)
 186   1          writeCMD(0x0C);             // display on, cursor off
 187   1      }
 188          
 189          
 190          
 191          void writeData(uchar Data)  
 192          {
 193   1          RS = 1;
 194   1              LCD = Data;
 195   1              E = 1;
 196   1              E = 0;
 197   1              msdelay(1);
 198   1      }
 199          
 200          
 201          
 202          void writeStr(uchar *str) 
 203          {
 204   1          while (*str != '\0')                                                        
 205   1                      writeData(*str++); 
 206   1      }
 207          /////////////////////////////////// END of LCD ///////////////////////////////////
 208          
 209          
 210          
 211          void main()
 212          {
 213   1          initLCD();
 214   1              initSensor();
 215   1              
 216   1          while(1) {       
 217   2              readTemp();
 218   2              writeCMD(0x80); // Force cursor to beginning of first line
 219   2              writeStr(result);  
 220   2          }
 221   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    359    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     16       3
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)

C51 COMPILER V9.01   MAIN                                                                  07/05/2023 18:42:39 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE main.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include <reg51.h>
   2          #include <absacc.h>             // defines XBYTE
   3          #include "intrins.h"    // defines nop
   4          
   5          
   6          
   7          #define REG0 XBYTE[0x8000]      // external data memory at address 8000h   
   8          #define REG1 XBYTE[0x8001]   
   9          #define REG2 XBYTE[0x8002]   
  10          
  11          #define uint unsigned int
  12          #define uchar unsigned char    
  13          
  14          uchar result[16] = {" T = "};  
  15           
  16          uchar bdata busyFlag;                   // bdata - bit-addressable
  17          sbit busyFlag_7 = busyFlag^7;   // bit 7 of busy flag
  18          
  19          sbit SCL = P3^3;                                // serial clock    
  20          sbit SDA = P3^4;                        // serial data
  21          
  22          
  23          
  24          void delay_ms(uint ms)                                                          // delay in ms                                  
  25          {
  26   1              uint i, j;
  27   1              for (i = 0; i < ms; i++)
  28   1                      for (j = 0; j < 123; j++);                                      
  29   1      }
  30          
  31          
  32          
  33          ///////////////////////////////////// START of I2C ////////////////////////////////////////////
  34          void Start(void)        // high-to-low transition of SDA while SCL is high       
  35          {
  36   1              SCL = 1;
  37   1              SDA = 1;
  38   1          _nop_();            // pause for 1 CPU cycle
  39   1          SDA = 0;
  40   1          _nop_();
  41   1      }  
  42          
  43          
  44          
  45          void Stop(void)         // low-to-high transition of SDA while SCL is high
  46          {
  47   1          SCL = 1;
  48   1              SDA = 0;
  49   1          _nop_();
  50   1          SDA = 1;
  51   1          _nop_();
  52   1      }
  53          
  54          
  55          
C51 COMPILER V9.01   MAIN                                                                  07/05/2023 18:42:39 PAGE 2   

  56          void ACK(void)          // SDA is 0  
  57          {
  58   1          SDA = 0;
  59   1          _nop_();
  60   1          SCL = 1;
  61   1          _nop_();
  62   1          SCL = 0;
  63   1      }
  64          
  65          
  66          
  67          void NACK(void)      
  68          {
  69   1          SDA = 1;            // SDA is 1
  70   1          _nop_ ();
  71   1          SCL = 1;
  72   1          _nop_ ();
  73   1          SCL = 0;
  74   1      } 
  75          
  76          
  77          
  78          void Send(uchar Data)            
  79          {
  80   1              uchar i;
  81   1                      
  82   1              for (i = 0; i < 8; i++) {               // 8 bit
  83   2                      SCL = 0;
  84   2                      _nop_();
  85   2      
  86   2                      if ((Data & 0x80) == 0x80)      // MSB first
  87   2                          SDA = 1;
  88   2                      else
  89   2                          SDA = 0;
  90   2      
  91   2                      Data <<= 1; 
  92   2      
  93   2                      SCL = 1;
  94   2                      _nop_();      
  95   2              } 
  96   1                   
  97   1          SCL = 0;
  98   1      }
  99          
 100          
 101          
 102          uchar Read(void) 
 103          {
 104   1              uchar Data = 0, i;
 105   1      
 106   1          SDA = 1;
 107   1          for (i = 0; i < 8; i++) {           // 8 bit
 108   2              SCL = 0;
 109   2              _nop_();
 110   2                      SCL = 1;
 111   2                      _nop_();
 112   2      
 113   2              if (SDA)      
 114   2                              Data |= 0x01;
 115   2                                              
 116   2                      if (i < 7)
 117   2                              Data <<= 1;                             // MSB first
C51 COMPILER V9.01   MAIN                                                                  07/05/2023 18:42:39 PAGE 3   

 118   2          }
 119   1      
 120   1          return Data;
 121   1      }
 122          ///////////////////////////////////// END of I2C ////////////////////////////////////////////
 123          
 124          
 125          
 126          //////////////////////////////////// START of DS1621 ////////////////////////////////////////
 127          void initSensor()
 128          {
 129   1          Start();
 130   1          Send(0x98);         // 1001 - for read and write operations ; 100 - address (proteus) ; 0 - write
 131   1          ACK();
 132   1          Send(0xEE);         // begins a temperature conversion
 133   1          NACK();
 134   1          Stop();
 135   1      }
 136          
 137          
 138          
 139          void readTemp() 
 140          {      
 141   1          uchar Data;
 142   1      
 143   1          Start(); 
 144   1          Send(0x98);
 145   1          ACK();
 146   1          Send(0xAA);         // reads the last temperature conversion result
 147   1          NACK();
 148   1              Stop();
 149   1      
 150   1          Start();
 151   1          Send(0x99);         // 1001 - for read and write operations ; 100 - address (proteus) ; 1 - write
 152   1          ACK();
 153   1          Data = Read();
 154   1          NACK();
 155   1          Stop();
 156   1      
 157   1          if((Data&0x80) != 0 && Data != 128) {       // negative value -> MSB = 1
 158   2              result[5] = '-';
 159   2              Data = ~(--Data);                                       // ex: 231 ---> -25
 160   2          }
 161   1          else                                                                        // positive value -> MSB = 0    
 162   1              result[5] = '+';
 163   1      
 164   1              result[6] = Data/100 + '0';                             // hundreds ; '0' --> convert num to char
 165   1          result[7] = Data / 10 % 10 + '0';           // dozens
 166   1          result[8] = Data % 10 + '0';                // units
 167   1              result[9] = 223;                                                // degree
 168   1              result[10] = 'C';
 169   1      }
 170          //////////////////////////////////// END of DS1621 ////////////////////////////////////////
 171          
 172          
 173          
 174          //////////////////////////////////// START of LCD ////////////////////////////////////////
 175          void busy()                             // check status of LCD
 176          {
 177   1              // busyFlag_7 = 1 ---> the system is now internally executing a previously received instruction
 178   1          // to read busy flag ---> RS = 0, R/W = 1
 179   1              // REG1 has address 01H
C51 COMPILER V9.01   MAIN                                                                  07/05/2023 18:42:39 PAGE 4   

 180   1              do {
 181   2              busyFlag = REG1;
 182   2          } while (busyFlag_7);       
 183   1      }
 184          
 185          
 186          
 187          void writeCMD(uchar cmd)   
 188          {
 189   1              // to send CMD ---> RS = 0, R/W = 0
 190   1              // REG0 has address 00H
 191   1          busy();
 192   1          REG0 = cmd;
 193   1      }
 194          
 195          
 196          
 197          void initLCD()          
 198          {
 199   1          writeCMD(0x38);             // data length 8bits ; 2 lines ; (5×8 pixel) matrix
 200   1          writeCMD(0x01);             // clear screen
 201   1          writeCMD(0x06);             // increment cursor (shift cursor to right)
 202   1          writeCMD(0x0C);             // display on, cursor off
 203   1      }
 204          
 205          
 206          
 207          void writeChar(uchar ch)    //write data
 208          {
 209   1              // to send data ---> RS = 1, R/W = 0
 210   1              // REG2 has address 10H
 211   1          busy();
 212   1          REG2 = ch;
 213   1      }
 214          
 215          
 216          
 217          void writeStr(uchar str[]) 
 218          {
 219   1          uchar i;
 220   1          for(i=0; i<16; i++)
 221   1              writeChar(str[i]);
 222   1      }
 223          //////////////////////////////////// END of LCD ///////////////////////////////////////
 224          
 225          
 226          
 227          void main()
 228          {
 229   1              initLCD();
 230   1              initSensor();
 231   1              delay_ms(1000);
 232   1                  
 233   1          while(1) {       
 234   2              readTemp();
 235   2              writeCMD(0x80);         // Force cursor to beginning of first line
 236   2              writeStr(result);  
 237   2          }
 238   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
C51 COMPILER V9.01   MAIN                                                                  07/05/2023 18:42:39 PAGE 5   

   CODE SIZE        =    358    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     17       3
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
